<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	
	
	<!-- 自动扫描service包下所有文件 -->
	<context:annotation-config />
	<context:component-scan base-package="com.sdx" />	
	<aop:aspectj-autoproxy />

	<context:property-placeholder location="classpath:dataSourceConfig.properties"
		ignore-unresolvable="true" />

	<!-- 数据源配置, 使用DBCP数据库连接池 -->

	<bean id="omsDataSource"  class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close" >
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>
	<!-- 自定义异常处理 -->
	<bean id="customExceptionHandler" class="com.sdx.common.exception.CustomExceptionHandler"/>
	<bean name="jdbcTemplateHandler" class="com.sdx.utils.JdbcTemplateHandler">
		<property name="dataSource" ref="omsDataSource"></property>
	</bean>
	<!-- <bean name="seq" class="com.cnpc.oms.utils.SequenceGenerator">
		<property name="jdbcTemplateHandler" ref="jdbcTemplateHandler"></property>
	</bean> -->
	

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="omsDataSource"></property>
		<property name="configLocation">
			<value>classpath:mybatisMappingConfig.xml</value>
		</property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
		<!-- <constructor-arg index="1" value="BATCH"></constructor-arg> -->
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
		<property name="basePackage" value="com.sdx.mapper,com.sdx.*.mapper"></property>
	</bean>

	<!-- ================================事务相关控制================================================= -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="omsDataSource"></property>
	</bean>
     <tx:annotation-driven transaction-manager="transactionManager" />
     
     <mvc:annotation-driven/>
     
     <!-- 項目自定义的Realm -->
	<!-- <bean id="shiroRealm" class="com.cnpc.oms.service.ShiroRealm">
		<property name="accountService" ref="accountServiceImpl" />
	</bean> -->
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroRealm" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<!-- 用户授权信息Cache -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />


	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/" />
		<property name="unauthorizedUrl" value="/unauthorized" />
		<property name="filterChainDefinitions">
			<value>
				** = anon
			    <!-- 
			    /login=authc
                /loginSubmit=anon
				/static/** = anon
				/images/** = anon
				/interface/** = anon
				/js/** = anon
				/Folder_Default/** = anon
				/userlist=anon
				/docs/** =	authc, perms[document:read]
				/** = user
				/client/* = anon
				 -->
			</value>
		</property>
	</bean>

</beans>